[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "shared"
version = "1.0.0"
description = "Trip Currency Service의 공통 모듈 라이브러리"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "KORgosu", email = "korgosu@example.com"}
]
maintainers = [
    {name = "KORgosu", email = "korgosu@example.com"}
]
keywords = [
    "currency",
    "exchange-rate", 
    "microservices",
    "fastapi",
    "database",
    "kafka",
    "redis",
    "mongodb",
    "mysql"
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Database",
    "Topic :: System :: Networking",
]
requires-python = ">=3.8"
dependencies = [
    # FastAPI and web framework
    "fastapi>=0.104.1",
    "uvicorn[standard]>=0.24.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    
    # Database drivers
    "aiomysql>=0.2.0",
    "redis[hiredis]>=5.0.1",
    "motor>=3.3.2",
    "pymongo>=4.6.0",
    
    # AWS SDK
    "boto3>=1.34.0",
    "botocore>=1.34.0",
    
    # HTTP clients
    "aiohttp>=3.9.1",
    "httpx>=0.25.2",
    "requests>=2.31.0",
    
    # Data processing
    "pandas>=2.1.4",
    "numpy>=1.24.4",
    
    # Messaging
    "aiokafka>=0.12.0",
    
    # Utilities
    "python-dateutil>=2.8.2",
    "structlog>=23.2.0",
    "cryptography>=41.0.7",
    "python-dotenv>=1.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
]
test = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
]

[project.urls]
Homepage = "https://github.com/KORgosu/shared_package_local"
Documentation = "https://github.com/KORgosu/shared_package_local#readme"
Repository = "https://github.com/KORgosu/shared_package_local"
"Bug Tracker" = "https://github.com/KORgosu/shared_package_local/issues"

[project.scripts]
trip-currency-shared = "shared.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["shared*"]

[tool.setuptools.package-data]
shared = ["*.py", "*.md", "*.txt"]

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["shared"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["shared"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
